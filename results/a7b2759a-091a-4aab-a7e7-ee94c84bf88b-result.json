{"name": "test_search_second[resolution0-chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7e301fea5+79173]\n\tGetHandleVerifier [0x0x7ff7e301ff00+79264]\n\t(No symbol) [0x0x7ff7e2dd9e5a]\n\t(No symbol) [0x0x7ff7e2e30586]\n\t(No symbol) [0x0x7ff7e2e3083c]\n\t(No symbol) [0x0x7ff7e2e84247]\n\t(No symbol) [0x0x7ff7e2e589af]\n\t(No symbol) [0x0x7ff7e2e8100d]\n\t(No symbol) [0x0x7ff7e2e58743]\n\t(No symbol) [0x0x7ff7e2e214c1]\n\t(No symbol) [0x0x7ff7e2e22253]\n\tGetHandleVerifier [0x0x7ff7e32ea2dd+3004797]\n\tGetHandleVerifier [0x0x7ff7e32e472d+2981325]\n\tGetHandleVerifier [0x0x7ff7e3303380+3107360]\n\tGetHandleVerifier [0x0x7ff7e303aa2e+188622]\n\tGetHandleVerifier [0x0x7ff7e30422bf+219487]\n\tGetHandleVerifier [0x0x7ff7e3028df4+115860]\n\tGetHandleVerifier [0x0x7ff7e3028fa9+116297]\n\tGetHandleVerifier [0x0x7ff7e300f558+11256]\n\tBaseThreadInitThunk [0x0x7ffab4797374+20]\n\tRtlUserThreadStart [0x0x7ffab63dcc91+33]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"558f8d0ebcc7a94909f614a30f9e3a9e\")>\nnavigate_to_public_form = None\n\n    @pytest.mark.parametrize(\"driver\",['chrome'],indirect=True)\n    @allure.epic(\"系统管理设置\")\n    @allure.feature(\"菜单权限管理\")\n    @allure.story(\"公共表单\")\n    @allure.description(\"二级菜单查询\")\n    def test_search_second(driver,navigate_to_public_form):\n        wait = WebDriverWait(driver, 20)\n        time.sleep(3)\n        try:\n    \n            #点击第二菜单\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[label[@for=\"two_id\"]]//input'))).click()\n            #选择行政制度管理\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[contains(@class,\"el-select-dropdown\")]//span[text()=\"行政制度管理\"]'))).click()\n            #点击查询按钮\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[contains(@class,\"app-container\")]/form/div[contains(@class,\"search-btns\")]/button[2]'))).click()\n            time.sleep(1)\n            #查询\n            text=wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//tbody/tr[1]/td[3]//span/span')))\n            if text.text != \"行政制度管理\":\n                highlight_element(driver, text)\n                allure.attach(driver.get_screenshot_as_png(), name=\"第二菜单查询失败截图\",\n                              attachment_type=allure.attachment_type.PNG)\n                reset_element(driver, text)\n            assert text.text == \"行政制度管理\"\n        except Exception as e:\n>           raise e\n\nC:\\Users\\Administrator\\Desktop\\test\\系统设置\\系统管理设置\\菜单权限管理\\test_公共表单.py:236: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Administrator\\Desktop\\test\\系统设置\\系统管理设置\\菜单权限管理\\test_公共表单.py:220: in test_search_second\n    wait.until(EC.element_to_be_clickable(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"558f8d0ebcc7a94909f614a30f9e3a9e\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001FDC7E9F600>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7e301fea5+79173]\nE       \tGetHandleVerifier [0x0x7ff7e301ff00+79264]\nE       \t(No symbol) [0x0x7ff7e2dd9e5a]\nE       \t(No symbol) [0x0x7ff7e2e30586]\nE       \t(No symbol) [0x0x7ff7e2e3083c]\nE       \t(No symbol) [0x0x7ff7e2e84247]\nE       \t(No symbol) [0x0x7ff7e2e589af]\nE       \t(No symbol) [0x0x7ff7e2e8100d]\nE       \t(No symbol) [0x0x7ff7e2e58743]\nE       \t(No symbol) [0x0x7ff7e2e214c1]\nE       \t(No symbol) [0x0x7ff7e2e22253]\nE       \tGetHandleVerifier [0x0x7ff7e32ea2dd+3004797]\nE       \tGetHandleVerifier [0x0x7ff7e32e472d+2981325]\nE       \tGetHandleVerifier [0x0x7ff7e3303380+3107360]\nE       \tGetHandleVerifier [0x0x7ff7e303aa2e+188622]\nE       \tGetHandleVerifier [0x0x7ff7e30422bf+219487]\nE       \tGetHandleVerifier [0x0x7ff7e3028df4+115860]\nE       \tGetHandleVerifier [0x0x7ff7e3028fa9+116297]\nE       \tGetHandleVerifier [0x0x7ff7e300f558+11256]\nE       \tBaseThreadInitThunk [0x0x7ffab4797374+20]\nE       \tRtlUserThreadStart [0x0x7ffab63dcc91+33]\n\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "description": "二级菜单查询", "parameters": [{"name": "resolution", "value": "(1920, 1080)"}, {"name": "driver", "value": "'chrome'"}], "start": 1753513966345, "stop": 1753513989669, "uuid": "469b1169-1036-4375-8a67-27a60476de16", "historyId": "32a3db63ced993444869203ed2c88293", "testCaseId": "b6992dd03a932b2d7cd66a9a681a9f1f", "fullName": "系统设置.系统管理设置.菜单权限管理.test_公共表单#test_search_second", "labels": [{"name": "feature", "value": "菜单权限管理"}, {"name": "epic", "value": "系统管理设置"}, {"name": "story", "value": "公共表单"}, {"name": "parentSuite", "value": "系统设置.系统管理设置.菜单权限管理"}, {"name": "suite", "value": "test_公共表单"}, {"name": "host", "value": "JH-KF10"}, {"name": "thread", "value": "19900-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "系统设置.系统管理设置.菜单权限管理.test_公共表单"}]}
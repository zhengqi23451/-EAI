{"name": "test_minimal[msedge-resolution0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: <unknown>: Failed to read the 'localStorage' property from 'Window': Storage is disabled inside 'data:' URLs.\n  (Session info: MicrosoftEdge=136.0.3240.64)\nStacktrace:\n\tGetHandleVerifier [0x00007FF65360F935+25029]\n\t(No symbol) [0x00007FF653564940]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF65386AA3A+1947706]\n\t(No symbol) [0x00007FF65333230C]\n\t(No symbol) [0x00007FF653334EE1]\n\t(No symbol) [0x00007FF6533B71F3]\n\t(No symbol) [0x00007FF65339908A]\n\t(No symbol) [0x00007FF65336E15D]\n\t(No symbol) [0x00007FF6533B6698]\n\t(No symbol) [0x00007FF653398DF3]\n\t(No symbol) [0x00007FF65336D6A6]\n\t(No symbol) [0x00007FF65336CBB3]\n\t(No symbol) [0x00007FF65336D4D3]\n\t(No symbol) [0x00007FF653475F0D]\n\t(No symbol) [0x00007FF653483AAF]\n\t(No symbol) [0x00007FF65347C49F]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF6536D49EA+284650]\n\t(No symbol) [0x00007FF6535722D1]\n\t(No symbol) [0x00007FF65356AD74]\n\t(No symbol) [0x00007FF65356AEC3]\n\t(No symbol) [0x00007FF65355CB06]\n\tBaseThreadInitThunk [0x00007FFAB4797374+20]\n\tRtlUserThreadStart [0x00007FFAB63DCC91+33]", "trace": "self = <allure_commons._allure.fixture object at 0x0000028BB4719650>, args = (), kwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nD:\\t\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py:221: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nconftest.py:9: in cleanup\n    driver.execute_script(\"window.localStorage.clear();\")\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:551: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000028BB4AB4510>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"\\\\u003Cunknown>\",\"message\":\"\\\\u003Cunknown>: Failed to read the \\'localSt...07FF65355CB06]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAB4797374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFAB63DCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: <unknown>: Failed to read the 'localStorage' property from 'Window': Storage is disabled inside 'data:' URLs.\nE         (Session info: MicrosoftEdge=136.0.3240.64)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF65360F935+25029]\nE       \t(No symbol) [0x00007FF653564940]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF65386AA3A+1947706]\nE       \t(No symbol) [0x00007FF65333230C]\nE       \t(No symbol) [0x00007FF653334EE1]\nE       \t(No symbol) [0x00007FF6533B71F3]\nE       \t(No symbol) [0x00007FF65339908A]\nE       \t(No symbol) [0x00007FF65336E15D]\nE       \t(No symbol) [0x00007FF6533B6698]\nE       \t(No symbol) [0x00007FF653398DF3]\nE       \t(No symbol) [0x00007FF65336D6A6]\nE       \t(No symbol) [0x00007FF65336CBB3]\nE       \t(No symbol) [0x00007FF65336D4D3]\nE       \t(No symbol) [0x00007FF653475F0D]\nE       \t(No symbol) [0x00007FF653483AAF]\nE       \t(No symbol) [0x00007FF65347C49F]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF6536D49EA+284650]\nE       \t(No symbol) [0x00007FF6535722D1]\nE       \t(No symbol) [0x00007FF65356AD74]\nE       \t(No symbol) [0x00007FF65356AEC3]\nE       \t(No symbol) [0x00007FF65355CB06]\nE       \tBaseThreadInitThunk [0x00007FFAB4797374+20]\nE       \tRtlUserThreadStart [0x00007FFAB63DCC91+33]\n\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException"}, "attachments": [{"name": "log", "source": "a6a5c5ac-56cf-4c99-8cdf-883cbc2046ac-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "driver", "value": "'msedge'"}, {"name": "resolution", "value": "(1920, 1080)"}], "start": 1753511055974, "stop": 1753511055975, "uuid": "07de3fd3-603e-4845-b705-4eb164588f08", "historyId": "35cd27c06d72a2e621528b402dd8ec39", "testCaseId": "68389ebb7e9163b77741cbfbdf47576c", "fullName": "test_新增简历#test_minimal", "labels": [{"name": "suite", "value": "test_新增简历"}, {"name": "host", "value": "JH-KF10"}, {"name": "thread", "value": "18584-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_新增简历"}]}
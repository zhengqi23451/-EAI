{"name": "test_addjl_save[resolution0-chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff7e301fea5+79173]\n\tGetHandleVerifier [0x0x7ff7e301ff00+79264]\n\t(No symbol) [0x0x7ff7e2dd9e5a]\n\t(No symbol) [0x0x7ff7e2e30586]\n\t(No symbol) [0x0x7ff7e2e3083c]\n\t(No symbol) [0x0x7ff7e2e84247]\n\t(No symbol) [0x0x7ff7e2e589af]\n\t(No symbol) [0x0x7ff7e2e8100d]\n\t(No symbol) [0x0x7ff7e2e58743]\n\t(No symbol) [0x0x7ff7e2e214c1]\n\t(No symbol) [0x0x7ff7e2e22253]\n\tGetHandleVerifier [0x0x7ff7e32ea2dd+3004797]\n\tGetHandleVerifier [0x0x7ff7e32e472d+2981325]\n\tGetHandleVerifier [0x0x7ff7e3303380+3107360]\n\tGetHandleVerifier [0x0x7ff7e303aa2e+188622]\n\tGetHandleVerifier [0x0x7ff7e30422bf+219487]\n\tGetHandleVerifier [0x0x7ff7e3028df4+115860]\n\tGetHandleVerifier [0x0x7ff7e3028fa9+116297]\n\tGetHandleVerifier [0x0x7ff7e300f558+11256]\n\tBaseThreadInitThunk [0x0x7ffab4797374+20]\n\tRtlUserThreadStart [0x0x7ffab63dcc91+33]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"463da7a429a1ae61be2682e7fc018fa4\")>, login = None\n\n    @pytest.fixture(scope=\"module\")\n    def navigate_to_addjl(driver, login):\n        \"\"\"导航到审批页面\"\"\"\n        window_size = driver.get_window_size()\n        width, height = window_size[\"width\"], window_size[\"height\"]\n        wait = WebDriverWait(driver, 20)\n        try:\n            # 点击协同办公设置\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//div[@class=\"menu-bar\"]/ul/li[text()=\" 人力资源 \"]'))).click()\n            if width==1366:\n                #点击扩展列表\n                wait.until(EC.element_to_be_clickable((By.XPATH,'//div[@class=\"menu-bar\"]/div[@class=\"flex flex-x-center flex-y-center fold-box\"]/i'))).click()\n            #点击人力资源管理\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//div[@class=\"sidebar-container\"]//li//span[text()=\"人力资源管理\"]'))).click()\n            #人力资源工作\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//div[@class=\"sidebar-container\"]//li//span[text()=\"人力资源工作\"]'))).click()\n            #点击新增简历输入\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//div[@class=\"sidebar-container\"]//li/ul//span[text()=\"新增简历输入\"]'))).click()\n            # 验证页面加载\n            time.sleep(2)\n            title = wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//form//div[@class=\"my-grid-box\"]//span[text()=\"应聘资料输入\"]')))\n            if title.text !=\"应聘资料输入\":\n                highlight_element(driver,title)\n                allure.attach(driver.get_screenshot_as_png(), name=\"导航到应聘资料输入页面失败截图\",attachment_type=allure.attachment_type.PNG)\n                reset_element(driver,title)\n            assert title.text == \"应聘资料输入\"\n        except Exception as e:\n            # 截图并附加到 Allure 报告\n>           raise e\n\ntest_新增简历.py:166: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_新增简历.py:145: in navigate_to_addjl\n    wait.until(EC.element_to_be_clickable((By.XPATH, '//div[@class=\"menu-bar\"]/ul/li[text()=\" 人力资源 \"]'))).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"463da7a429a1ae61be2682e7fc018fa4\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002646A57BD80>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7e301fea5+79173]\nE       \tGetHandleVerifier [0x0x7ff7e301ff00+79264]\nE       \t(No symbol) [0x0x7ff7e2dd9e5a]\nE       \t(No symbol) [0x0x7ff7e2e30586]\nE       \t(No symbol) [0x0x7ff7e2e3083c]\nE       \t(No symbol) [0x0x7ff7e2e84247]\nE       \t(No symbol) [0x0x7ff7e2e589af]\nE       \t(No symbol) [0x0x7ff7e2e8100d]\nE       \t(No symbol) [0x0x7ff7e2e58743]\nE       \t(No symbol) [0x0x7ff7e2e214c1]\nE       \t(No symbol) [0x0x7ff7e2e22253]\nE       \tGetHandleVerifier [0x0x7ff7e32ea2dd+3004797]\nE       \tGetHandleVerifier [0x0x7ff7e32e472d+2981325]\nE       \tGetHandleVerifier [0x0x7ff7e3303380+3107360]\nE       \tGetHandleVerifier [0x0x7ff7e303aa2e+188622]\nE       \tGetHandleVerifier [0x0x7ff7e30422bf+219487]\nE       \tGetHandleVerifier [0x0x7ff7e3028df4+115860]\nE       \tGetHandleVerifier [0x0x7ff7e3028fa9+116297]\nE       \tGetHandleVerifier [0x0x7ff7e300f558+11256]\nE       \tBaseThreadInitThunk [0x0x7ffab4797374+20]\nE       \tRtlUserThreadStart [0x0x7ffab63dcc91+33]\n\n..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "description": "保存简历", "parameters": [{"name": "resolution", "value": "(1920, 1080)"}, {"name": "driver", "value": "'chrome'"}], "start": 1753496108756, "stop": 1753496108756, "uuid": "da8bc8f2-cf6c-437e-b1ed-1c1ec3774531", "historyId": "eb27843358812f9a12e54576aed7caa3", "testCaseId": "b6782687b453c28cc98817fb0727a7d6", "fullName": "test_新增简历#test_addjl_save", "labels": [{"name": "story", "value": "新简历输入"}, {"name": "feature", "value": "人力资源"}, {"name": "suite", "value": "test_新增简历"}, {"name": "host", "value": "JH-KF10"}, {"name": "thread", "value": "13752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_新增简历"}]}
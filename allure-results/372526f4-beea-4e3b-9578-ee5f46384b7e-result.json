{"name": "test_add_user[resolution0-chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button data-v-7e6552ed=\"\" type=\"button\" class=\"el-button el-button--success el-button--mini\">...</button> is not clickable at point (1742, 171). Other element would receive the click: <div data-v-0850fbb2=\"\" data-v-7e6552ed=\"\" class=\"el-dialog__wrapper user-dialog\" style=\"z-index: 2009;\">...</div>\n  (Session info: chrome=137.0.7151.69)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7e301fea5+79173]\n\tGetHandleVerifier [0x0x7ff7e301ff00+79264]\n\t(No symbol) [0x0x7ff7e2dd9e5a]\n\t(No symbol) [0x0x7ff7e2e38599]\n\t(No symbol) [0x0x7ff7e2e35f32]\n\t(No symbol) [0x0x7ff7e2e32f71]\n\t(No symbol) [0x0x7ff7e2e31e61]\n\t(No symbol) [0x0x7ff7e2e23464]\n\t(No symbol) [0x0x7ff7e2e5896a]\n\t(No symbol) [0x0x7ff7e2e22d16]\n\t(No symbol) [0x0x7ff7e2e58b80]\n\t(No symbol) [0x0x7ff7e2e8100d]\n\t(No symbol) [0x0x7ff7e2e58743]\n\t(No symbol) [0x0x7ff7e2e214c1]\n\t(No symbol) [0x0x7ff7e2e22253]\n\tGetHandleVerifier [0x0x7ff7e32ea2dd+3004797]\n\tGetHandleVerifier [0x0x7ff7e32e472d+2981325]\n\tGetHandleVerifier [0x0x7ff7e3303380+3107360]\n\tGetHandleVerifier [0x0x7ff7e303aa2e+188622]\n\tGetHandleVerifier [0x0x7ff7e30422bf+219487]\n\tGetHandleVerifier [0x0x7ff7e3028df4+115860]\n\tGetHandleVerifier [0x0x7ff7e3028fa9+116297]\n\tGetHandleVerifier [0x0x7ff7e300f558+11256]\n\tBaseThreadInitThunk [0x0x7ffab4797374+20]\n\tRtlUserThreadStart [0x0x7ffab63dcc91+33]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b4697d740f6620944a0afaf614a13f90\")>\nnavigate_to_user_management = None\n\n    @pytest.mark.parametrize(\"driver\",['chrome'],indirect=True)\n    @allure.epic(\"系统管理设置\")\n    @allure.feature(\"菜单权限管理\")\n    @allure.story(\"用户管理\")\n    @allure.description(\"新增用户\")\n    def test_add_user(driver,navigate_to_user_management):\n        wait = WebDriverWait(driver, 20)\n        time.sleep(3)\n        try:\n            # 点击新增按钮\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH,'//*[@id=\"app\"]/div/div[@class=\"main-container\"]/section/div/div/div[@class=\"table-info-bar flex flex-x-sb flex-y-center\"]/div[@class=\"right flex flex-y-center\"]/button[3]'))).click()\n            time.sleep(1)\n            # 选择职务\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[@aria-label=\"新增用户\"]//div[label[@for=\"role_id\"]]//input'))).click()\n            #选择科技部\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[@x-placement=\"bottom-start\"]//div[contains(@class,\"el-cascader-panel\")]//ul/li/span[text()=\"科技部\"]'))).click()\n            #选择web前端\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[@x-placement=\"bottom-start\"]//div[contains(@class,\"el-cascader-panel\")]//ul/li/span[text()=\"web前端\"]'))).click()\n            #输入用户名\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[@class=\"el-dialog__body\"]//div[label[@for=\"username\"]]//input'))).send_keys(\"test\")\n            # 输入手机号\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[@class=\"el-dialog__body\"]//div[label[@for=\"mobile\"]]//input'))).send_keys(\"15088972541\")\n            # 输入姓名\n            name=wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[@aria-label=\"新增用户\"]//div[label[@for=\"name\"]]//input')))\n            name.send_keys(\"郑琦\")\n    \n    \n            # 输入密码\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[@class=\"el-dialog__body\"]//div[label[@for=\"password\"]]//input'))).send_keys(\"123456\")\n            # 输入确认密码\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[@class=\"el-dialog__body\"]//div[label[@for=\"password_confirmation\"]]//input'))).send_keys(\"123456\")\n            #点击保存\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[@class=\"el-dialog__footer\"]//button[span[text()=\"保存\"]]'))).click()\n    \n    \n            time.sleep(1)\n            # 查询\n            text = wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//p[@class=\"el-message__content\"]')))\n            if text.text == \"新增成功\":\n                print(\"测试通过：新增成功\")\n            elif \"该手机号码已存在\" in text.text:\n                print(\"测试通过：正确提示重复数据错误\")\n                # 点击关闭\n                wait.until(EC.element_to_be_clickable((By.XPATH,\"//div[@aria-label='新增用户']/div[contains(@class, 'el-dialog__footer')]//button[contains(@class, 'el-button--primary')]\"))).click()\n                time.sleep(2)\n            else:\n                highlight_element(driver, text)\n                allure.attach(driver.get_screenshot_as_png(), name=\"新增用户失败截图\",\n                              attachment_type=allure.attachment_type.PNG)\n                reset_element(driver, text)\n                pytest.fail(f\"新增失败，提示信息为：{text.text}\")\n    \n        except Exception as e:\n>           raise e\n\n系统设置\\系统管理设置\\菜单权限管理\\test_用户管理.py:481: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n系统设置\\系统管理设置\\菜单权限管理\\test_用户管理.py:428: in test_add_user\n    (By.XPATH,'//*[@id=\"app\"]/div/div[@class=\"main-container\"]/section/div/div/div[@class=\"table-info-bar flex flex-x-sb flex-y-center\"]/div[@class=\"right flex flex-y-center\"]/button[3]'))).click()\n                                                                                                                                                                                              ^^^^^^^\n..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\remote\\webelement.py:121: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\remote\\webelement.py:574: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002646A70B8E0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...ff7e300f558+11256]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffab4797374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffab63dcc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button data-v-7e6552ed=\"\" type=\"button\" class=\"el-button el-button--success el-button--mini\">...</button> is not clickable at point (1742, 171). Other element would receive the click: <div data-v-0850fbb2=\"\" data-v-7e6552ed=\"\" class=\"el-dialog__wrapper user-dialog\" style=\"z-index: 2009;\">...</div>\nE         (Session info: chrome=137.0.7151.69)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7e301fea5+79173]\nE       \tGetHandleVerifier [0x0x7ff7e301ff00+79264]\nE       \t(No symbol) [0x0x7ff7e2dd9e5a]\nE       \t(No symbol) [0x0x7ff7e2e38599]\nE       \t(No symbol) [0x0x7ff7e2e35f32]\nE       \t(No symbol) [0x0x7ff7e2e32f71]\nE       \t(No symbol) [0x0x7ff7e2e31e61]\nE       \t(No symbol) [0x0x7ff7e2e23464]\nE       \t(No symbol) [0x0x7ff7e2e5896a]\nE       \t(No symbol) [0x0x7ff7e2e22d16]\nE       \t(No symbol) [0x0x7ff7e2e58b80]\nE       \t(No symbol) [0x0x7ff7e2e8100d]\nE       \t(No symbol) [0x0x7ff7e2e58743]\nE       \t(No symbol) [0x0x7ff7e2e214c1]\nE       \t(No symbol) [0x0x7ff7e2e22253]\nE       \tGetHandleVerifier [0x0x7ff7e32ea2dd+3004797]\nE       \tGetHandleVerifier [0x0x7ff7e32e472d+2981325]\nE       \tGetHandleVerifier [0x0x7ff7e3303380+3107360]\nE       \tGetHandleVerifier [0x0x7ff7e303aa2e+188622]\nE       \tGetHandleVerifier [0x0x7ff7e30422bf+219487]\nE       \tGetHandleVerifier [0x0x7ff7e3028df4+115860]\nE       \tGetHandleVerifier [0x0x7ff7e3028fa9+116297]\nE       \tGetHandleVerifier [0x0x7ff7e300f558+11256]\nE       \tBaseThreadInitThunk [0x0x7ffab4797374+20]\nE       \tRtlUserThreadStart [0x0x7ffab63dcc91+33]\n\n..\\..\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python313\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "description": "新增用户", "parameters": [{"name": "resolution", "value": "(1920, 1080)"}, {"name": "driver", "value": "'chrome'"}], "start": 1753498638660, "stop": 1753498642736, "uuid": "63afe0ce-9871-42fc-92fa-3f7cfd311d41", "historyId": "a5dd2b55df21db5ab9be880278fcb186", "testCaseId": "3f1f9d0aa9be8fc03bdb5985db6ade03", "fullName": "系统设置.系统管理设置.菜单权限管理.test_用户管理#test_add_user", "labels": [{"name": "feature", "value": "菜单权限管理"}, {"name": "story", "value": "用户管理"}, {"name": "epic", "value": "系统管理设置"}, {"name": "parentSuite", "value": "系统设置.系统管理设置.菜单权限管理"}, {"name": "suite", "value": "test_用户管理"}, {"name": "host", "value": "JH-KF10"}, {"name": "thread", "value": "13752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "系统设置.系统管理设置.菜单权限管理.test_用户管理"}]}
{"name": "test_file_style[resolution0-chrome]", "status": "failed", "statusDetails": {"message": "AssertionError: 查询按钮样式不匹配: {'background-color': 'rgba(60, 141, 188, 1)', 'color': 'rgba(255, 255, 255, 1)', 'border-radius': '2px', 'width': '76px', 'height': '28px'}\nassert {'background-color': 'rgba(60, 141, 188, 1)', 'color': 'rgba(255, 255, 255, 1)', 'border-radius': '2px', 'width': '76px', 'height': '28px'} == {'background-color': 'rgba(0, 150, 136, 1)', 'color': 'rgba(255, 255, 255, 1)', 'border-radius': '2px', 'width': '76px', 'height': '28px'}\n  \n  Common items:\n  {'border-radius': '2px',\n   'color': 'rgba(255, 255, 255, 1)',\n   'height': '28px',\n   'width': '76px'}\n  Differing items:\n  {'background-color': 'rgba(60, 141, 188, 1)'} != {'background-color': 'rgba(0, 150, 136, 1)'}\n  \n  Full diff:\n    {\n  -     'background-color': 'rgba(0, 150, 136, 1)',\n  ?                                   ^^   ^^\n  +     'background-color': 'rgba(60, 141, 188, 1)',\n  ?                               +    ^^   ^^\n        'border-radius': '2px',\n        'color': 'rgba(255, 255, 255, 1)',\n        'height': '28px',\n        'width': '76px',\n    }", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ebfe1ed729e7a560fc893cac5b7a07e9\")>\nnavigate_to_approval = None\n\n    @allure.epic(\"协同办公\")\n    @allure.feature(\"我的工作\")\n    @allure.story(\"我的审批\")\n    @allure.description(\"样式比较\")\n    @pytest.mark.parametrize(\"driver\",['chrome'],indirect=True)\n    def test_file_style(driver, navigate_to_approval):\n        \"\"\"测试文件相关组件的样式\"\"\"\n        wait = WebDriverWait(driver, 10)\n    \n        # 定义预期样式\n        expected_styles = {\n            # 搜索输入框样式\n            'search_input': {\n                'height': '24px',\n                'border': '1px solid rgb(220, 223, 230)',\n                'border-radius': '2px',\n            },\n            # 查询按钮样式\n            'search_button': {\n                'background-color': 'rgba(0, 150, 136, 1)',\n                'color': 'rgba(255, 255, 255, 1)',\n                'border-radius': '2px',\n                'width': '76px',\n                'height': '28px'\n            },\n            # 重置按钮样式\n            'reset_button': {\n                'background-color': 'rgba(60, 141, 188, 1)',\n                'color': 'rgba(255, 255, 255, 1)',\n                'border-radius': '2px',\n                'width': '76px',\n                'height': '28px'\n            },\n            # 文件类型选择器样式\n            'file_type_select': {\n                'height':'24px',\n                'border': '1px solid rgb(220, 223, 230)',\n                'border-radius': '2px'\n            },\n            #审批按钮样式\n            'approve_button':{\n                'background-color': 'rgba(0, 0, 0, 0)',\n                'color': 'rgba(64, 128, 255, 1)',\n                'border-radius': '3px',\n                'width': '26px',\n                'height': '18px'\n            }\n        }\n        time.sleep(1)\n    \n        try:\n            # 测试文件名输入框样式\n            file_name_input = wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//*[@id=\"app\"]//div[label[@for=\"file_name\"]]//input')))\n            actual_styles = {\n                'height': file_name_input.value_of_css_property('height'),\n                'border': file_name_input.value_of_css_property('border'),\n                'border-radius': file_name_input.value_of_css_property('border-radius'),\n            }\n            if actual_styles != expected_styles['search_input']:\n                highlight_element(driver,file_name_input)\n                allure.attach(driver.get_screenshot_as_png(), name=\"文件名输入框样式匹配失败截图\",attachment_type=allure.attachment_type.PNG)\n                reset_element(driver,file_name_input)\n            assert actual_styles == expected_styles['search_input'], f\"文件名输入框样式不匹配: {actual_styles}\"\n    \n            time.sleep(1)\n    \n            # 测试文件类型选择器样式\n            file_type_select = wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//*[@id=\"app\"]//div[label[@for=\"file_type\"]]//input')))\n            actual_styles = {\n                'height': file_type_select.value_of_css_property('height'),\n                'border': file_type_select.value_of_css_property('border'),\n                'border-radius': file_type_select.value_of_css_property('border-radius')\n            }\n            if actual_styles != expected_styles['file_type_select']:\n                highlight_element(driver,file_type_select)\n                allure.attach(driver.get_screenshot_as_png(), name=\"文件类型选择器样式匹配失败截图\",attachment_type=allure.attachment_type.PNG)\n                reset_element(driver, file_type_select)\n            assert actual_styles == expected_styles['file_type_select'], f\"文件类型选择器样式不匹配: {actual_styles}\"\n    \n            time.sleep(1)\n    \n            # 测试查询按钮样式\n            search_button = wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//form//button[contains(@class,\"el-button--primary\")]')))\n            actual_styles = {\n                'background-color': search_button.value_of_css_property('background-color'),\n                'color': search_button.value_of_css_property('color'),\n                'border-radius': search_button.value_of_css_property('border-radius'),\n                'width': search_button.value_of_css_property('width'),\n                'height': search_button.value_of_css_property('height')\n            }\n            if actual_styles != expected_styles['search_button']:\n                highlight_element(driver,search_button)\n                allure.attach(driver.get_screenshot_as_png(), name=\"查询按钮样式匹配失败截图\",attachment_type=allure.attachment_type.PNG)\n                reset_element(driver, search_button)\n            assert actual_styles == expected_styles['search_button'], f\"查询按钮样式不匹配: {actual_styles}\"\n    \n            time.sleep(1)\n    \n            # 测试重置按钮样式\n            reset_button = wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//form//button[contains(@class,\"el-button--success\")]')))\n            actual_styles = {\n                'background-color': reset_button.value_of_css_property('background-color'),\n                'color': reset_button.value_of_css_property('color'),\n                'border-radius': reset_button.value_of_css_property('border-radius'),\n                'width': reset_button.value_of_css_property('width'),\n                'height': reset_button.value_of_css_property('height')\n            }\n            if actual_styles != expected_styles['reset_button']:\n                highlight_element(driver,reset_button)\n                allure.attach(driver.get_screenshot_as_png(), name=\"重置按钮样式匹配失败截图\",attachment_type=allure.attachment_type.PNG)\n                reset_element(driver,reset_button)\n            assert actual_styles == expected_styles['reset_button'], f\"重置按钮样式不匹配: {actual_styles}\"\n    \n            #审批按钮样式\n            approval_button = wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//tbody/tr[1]/td[11]//button')))\n            actual_styles = {\n                'background-color': approval_button.value_of_css_property('background-color'),\n                'color': approval_button.value_of_css_property('color'),\n                'border-radius': approval_button.value_of_css_property('border-radius'),\n                'width': approval_button.value_of_css_property('width'),\n                'height': approval_button.value_of_css_property('height')\n            }\n            if actual_styles != expected_styles['approve_button']:\n                highlight_element(driver,approval_button)\n                allure.attach(driver.get_screenshot_as_png(), name=\"审批按钮样式匹配失败截图\",attachment_type=allure.attachment_type.PNG)\n                reset_element(driver, approval_button)\n            assert actual_styles == expected_styles['approve_button'], f\"审批按钮样式不匹配: {actual_styles}\"\n        except Exception as e:\n            # 截图并附加到 Allure 报告\n    \n>           raise e\n\ntest_我的审批.py:296: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ebfe1ed729e7a560fc893cac5b7a07e9\")>\nnavigate_to_approval = None\n\n    @allure.epic(\"协同办公\")\n    @allure.feature(\"我的工作\")\n    @allure.story(\"我的审批\")\n    @allure.description(\"样式比较\")\n    @pytest.mark.parametrize(\"driver\",['chrome'],indirect=True)\n    def test_file_style(driver, navigate_to_approval):\n        \"\"\"测试文件相关组件的样式\"\"\"\n        wait = WebDriverWait(driver, 10)\n    \n        # 定义预期样式\n        expected_styles = {\n            # 搜索输入框样式\n            'search_input': {\n                'height': '24px',\n                'border': '1px solid rgb(220, 223, 230)',\n                'border-radius': '2px',\n            },\n            # 查询按钮样式\n            'search_button': {\n                'background-color': 'rgba(0, 150, 136, 1)',\n                'color': 'rgba(255, 255, 255, 1)',\n                'border-radius': '2px',\n                'width': '76px',\n                'height': '28px'\n            },\n            # 重置按钮样式\n            'reset_button': {\n                'background-color': 'rgba(60, 141, 188, 1)',\n                'color': 'rgba(255, 255, 255, 1)',\n                'border-radius': '2px',\n                'width': '76px',\n                'height': '28px'\n            },\n            # 文件类型选择器样式\n            'file_type_select': {\n                'height':'24px',\n                'border': '1px solid rgb(220, 223, 230)',\n                'border-radius': '2px'\n            },\n            #审批按钮样式\n            'approve_button':{\n                'background-color': 'rgba(0, 0, 0, 0)',\n                'color': 'rgba(64, 128, 255, 1)',\n                'border-radius': '3px',\n                'width': '26px',\n                'height': '18px'\n            }\n        }\n        time.sleep(1)\n    \n        try:\n            # 测试文件名输入框样式\n            file_name_input = wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//*[@id=\"app\"]//div[label[@for=\"file_name\"]]//input')))\n            actual_styles = {\n                'height': file_name_input.value_of_css_property('height'),\n                'border': file_name_input.value_of_css_property('border'),\n                'border-radius': file_name_input.value_of_css_property('border-radius'),\n            }\n            if actual_styles != expected_styles['search_input']:\n                highlight_element(driver,file_name_input)\n                allure.attach(driver.get_screenshot_as_png(), name=\"文件名输入框样式匹配失败截图\",attachment_type=allure.attachment_type.PNG)\n                reset_element(driver,file_name_input)\n            assert actual_styles == expected_styles['search_input'], f\"文件名输入框样式不匹配: {actual_styles}\"\n    \n            time.sleep(1)\n    \n            # 测试文件类型选择器样式\n            file_type_select = wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//*[@id=\"app\"]//div[label[@for=\"file_type\"]]//input')))\n            actual_styles = {\n                'height': file_type_select.value_of_css_property('height'),\n                'border': file_type_select.value_of_css_property('border'),\n                'border-radius': file_type_select.value_of_css_property('border-radius')\n            }\n            if actual_styles != expected_styles['file_type_select']:\n                highlight_element(driver,file_type_select)\n                allure.attach(driver.get_screenshot_as_png(), name=\"文件类型选择器样式匹配失败截图\",attachment_type=allure.attachment_type.PNG)\n                reset_element(driver, file_type_select)\n            assert actual_styles == expected_styles['file_type_select'], f\"文件类型选择器样式不匹配: {actual_styles}\"\n    \n            time.sleep(1)\n    \n            # 测试查询按钮样式\n            search_button = wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//form//button[contains(@class,\"el-button--primary\")]')))\n            actual_styles = {\n                'background-color': search_button.value_of_css_property('background-color'),\n                'color': search_button.value_of_css_property('color'),\n                'border-radius': search_button.value_of_css_property('border-radius'),\n                'width': search_button.value_of_css_property('width'),\n                'height': search_button.value_of_css_property('height')\n            }\n            if actual_styles != expected_styles['search_button']:\n                highlight_element(driver,search_button)\n                allure.attach(driver.get_screenshot_as_png(), name=\"查询按钮样式匹配失败截图\",attachment_type=allure.attachment_type.PNG)\n                reset_element(driver, search_button)\n>           assert actual_styles == expected_styles['search_button'], f\"查询按钮样式不匹配: {actual_styles}\"\nE           AssertionError: 查询按钮样式不匹配: {'background-color': 'rgba(60, 141, 188, 1)', 'color': 'rgba(255, 255, 255, 1)', 'border-radius': '2px', 'width': '76px', 'height': '28px'}\nE           assert {'background-color': 'rgba(60, 141, 188, 1)', 'color': 'rgba(255, 255, 255, 1)', 'border-radius': '2px', 'width': '76px', 'height': '28px'} == {'background-color': 'rgba(0, 150, 136, 1)', 'color': 'rgba(255, 255, 255, 1)', 'border-radius': '2px', 'width': '76px', 'height': '28px'}\nE             \nE             Common items:\nE             {'border-radius': '2px',\nE              'color': 'rgba(255, 255, 255, 1)',\nE              'height': '28px',\nE              'width': '76px'}\nE             Differing items:\nE             {'background-color': 'rgba(60, 141, 188, 1)'} != {'background-color': 'rgba(0, 150, 136, 1)'}\nE             \nE             Full diff:\nE               {\nE             -     'background-color': 'rgba(0, 150, 136, 1)',\nE             ?                                   ^^   ^^\nE             +     'background-color': 'rgba(60, 141, 188, 1)',\nE             ?                               +    ^^   ^^\nE                   'border-radius': '2px',\nE                   'color': 'rgba(255, 255, 255, 1)',\nE                   'height': '28px',\nE                   'width': '76px',\nE               }\n\ntest_我的审批.py:258: AssertionError"}, "description": "样式比较", "attachments": [{"name": "查询按钮样式匹配失败截图", "source": "3099967c-fc94-4353-91ca-8d45a53f2c9b-attachment.png", "type": "image/png"}], "parameters": [{"name": "resolution", "value": "(1920, 1080)"}, {"name": "driver", "value": "'chrome'"}], "start": 1751091333277, "stop": 1751091336733, "uuid": "3ac33cfb-236d-44f7-9713-1d87793e7f93", "historyId": "c759da2af88d81260a7592d982a9e178", "testCaseId": "009237414e4b01f661dfb4376e6d5668", "fullName": "test_我的审批#test_file_style", "labels": [{"name": "feature", "value": "我的工作"}, {"name": "epic", "value": "协同办公"}, {"name": "story", "value": "我的审批"}, {"name": "suite", "value": "test_我的审批"}, {"name": "host", "value": "JH-KF10"}, {"name": "thread", "value": "28496-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_我的审批"}]}
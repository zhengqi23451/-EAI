{"name": "test_file_search_by_name[resolution0-chrome]", "status": "failed", "statusDetails": {"message": "AssertionError: assert '\\u65b0' in '\\u56fd\\u5185\\u9500\\u552e\\u5ba2\\u6237'", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d29a51740a5b4086373db5118a74f938\")>\nnavigate_to_temporary = None\n\n    @allure.epic(\"协同办公\")\n    @allure.feature(\"我的工作\")\n    @allure.story(\"临时文档\")\n    @allure.description(\"根据文件名称查询\")\n    @pytest.mark.parametrize(\"driver\",['chrome'],indirect=True)\n    def test_file_search_by_name(driver, navigate_to_temporary):\n        \"\"\"测试按文件名查询\"\"\"\n        wait = WebDriverWait(driver, 10)\n        try:\n            # 文件名查询测试\n            file_name = wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//*[@id=\"app\"]//div[label[@for=\"file_name\"]]//input')))\n            file_name.send_keys(\"新\")\n    \n            wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//form//button[contains(@class,\"el-button--success\")]'))).click()\n            wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//form//button[contains(@class,\"el-button--primary\")]'))).click()\n            text = wait.until(EC.presence_of_element_located(\n                (By.XPATH,'//tbody/tr[1]/td[2]//span/span')))\n            n = text.text\n            if \"新\" not in n:\n                highlight_element(driver,text)\n                allure.attach(driver.get_screenshot_as_png(), name=\"文件名称查询失败截图\",attachment_type=allure.attachment_type.PNG)\n                reset_element(driver,text)\n            assert \"新\" in n\n        except Exception as e:\n            # 截图并附加到 Allure 报告\n    \n>           raise e\n\ntest_临时文档.py:446: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d29a51740a5b4086373db5118a74f938\")>\nnavigate_to_temporary = None\n\n    @allure.epic(\"协同办公\")\n    @allure.feature(\"我的工作\")\n    @allure.story(\"临时文档\")\n    @allure.description(\"根据文件名称查询\")\n    @pytest.mark.parametrize(\"driver\",['chrome'],indirect=True)\n    def test_file_search_by_name(driver, navigate_to_temporary):\n        \"\"\"测试按文件名查询\"\"\"\n        wait = WebDriverWait(driver, 10)\n        try:\n            # 文件名查询测试\n            file_name = wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//*[@id=\"app\"]//div[label[@for=\"file_name\"]]//input')))\n            file_name.send_keys(\"新\")\n    \n            wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//form//button[contains(@class,\"el-button--success\")]'))).click()\n            wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//form//button[contains(@class,\"el-button--primary\")]'))).click()\n            text = wait.until(EC.presence_of_element_located(\n                (By.XPATH,'//tbody/tr[1]/td[2]//span/span')))\n            n = text.text\n            if \"新\" not in n:\n                highlight_element(driver,text)\n                allure.attach(driver.get_screenshot_as_png(), name=\"文件名称查询失败截图\",attachment_type=allure.attachment_type.PNG)\n                reset_element(driver,text)\n>           assert \"新\" in n\nE           AssertionError: assert '\\u65b0' in '\\u56fd\\u5185\\u9500\\u552e\\u5ba2\\u6237'\n\ntest_临时文档.py:442: AssertionError"}, "description": "根据文件名称查询", "attachments": [{"name": "文件名称查询失败截图", "source": "a8e6e884-cb97-4d15-aff9-fc5d1a3e8640-attachment.png", "type": "image/png"}], "parameters": [{"name": "resolution", "value": "(1920, 1080)"}, {"name": "driver", "value": "'chrome'"}], "start": 1751094818129, "stop": 1751094818717, "uuid": "328ff097-7fa2-4499-83f9-9726a60055b4", "historyId": "09c65d3ddb124411584afca0eb25c44e", "testCaseId": "a90174bf2322fee5c83ef41733f13916", "fullName": "test_临时文档#test_file_search_by_name", "labels": [{"name": "story", "value": "临时文档"}, {"name": "epic", "value": "协同办公"}, {"name": "feature", "value": "我的工作"}, {"name": "suite", "value": "test_临时文档"}, {"name": "host", "value": "JH-KF10"}, {"name": "thread", "value": "4600-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_临时文档"}]}
{"name": "test_approve_candidates[login0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff74704fea5+79173]\n\tGetHandleVerifier [0x0x7ff74704ff00+79264]\n\t(No symbol) [0x0x7ff746e09e5a]\n\t(No symbol) [0x0x7ff746e60586]\n\t(No symbol) [0x0x7ff746e6083c]\n\t(No symbol) [0x0x7ff746eb4247]\n\t(No symbol) [0x0x7ff746e889af]\n\t(No symbol) [0x0x7ff746eb100d]\n\t(No symbol) [0x0x7ff746e88743]\n\t(No symbol) [0x0x7ff746e514c1]\n\t(No symbol) [0x0x7ff746e52253]\n\tGetHandleVerifier [0x0x7ff74731a2dd+3004797]\n\tGetHandleVerifier [0x0x7ff74731472d+2981325]\n\tGetHandleVerifier [0x0x7ff747333380+3107360]\n\tGetHandleVerifier [0x0x7ff74706aa2e+188622]\n\tGetHandleVerifier [0x0x7ff7470722bf+219487]\n\tGetHandleVerifier [0x0x7ff747058df4+115860]\n\tGetHandleVerifier [0x0x7ff747058fa9+116297]\n\tGetHandleVerifier [0x0x7ff74703f558+11256]\n\tBaseThreadInitThunk [0x0x7ffda8bf7374+20]\n\tRtlUserThreadStart [0x0x7ffdaa1fcc91+33]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"09be1a58ab316ed28be57fa252a553f5\")>\n\n    @pytest.fixture(scope=\"function\")\n    def approve_f(driver):\n        wait = WebDriverWait(driver, 20)\n        print(\"人事经理专属操作\")\n        #点击审批按钮\n        wait.until(EC.element_to_be_clickable((By.XPATH, \"//tbody/tr[1]/td[last()]//span\"))).click()\n        #综合测评\n        wait.until(EC.element_to_be_clickable((By.XPATH, \"//tbody/tr[1]/td[4]//label[1]/span/span\"))).click()\n        wait.until(EC.element_to_be_clickable((By.XPATH, \"//tbody/tr[2]/td[4]//label[1]/span/span\"))).click()\n        wait.until(EC.element_to_be_clickable((By.XPATH, \"//tbody/tr[3]/td[4]//label[1]/span/span\"))).click()\n        wait.until(EC.element_to_be_clickable((By.XPATH, \"//tbody/tr[4]/td[4]//label[1]/span/span\"))).click()\n        wait.until(EC.element_to_be_clickable((By.XPATH, \"//tbody/tr[5]/td[4]//label[1]/span/span\"))).click()\n        time.sleep(1)\n        #就职信息和岗位配置信息\n        #点击选择按钮\n>       wait.until(EC.element_to_be_clickable((By.XPATH, \"//div[@class='flex']/button\"))).click()\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_招聘审批流程.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"09be1a58ab316ed28be57fa252a553f5\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000013789597EC0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff74704fea5+79173]\nE       \tGetHandleVerifier [0x0x7ff74704ff00+79264]\nE       \t(No symbol) [0x0x7ff746e09e5a]\nE       \t(No symbol) [0x0x7ff746e60586]\nE       \t(No symbol) [0x0x7ff746e6083c]\nE       \t(No symbol) [0x0x7ff746eb4247]\nE       \t(No symbol) [0x0x7ff746e889af]\nE       \t(No symbol) [0x0x7ff746eb100d]\nE       \t(No symbol) [0x0x7ff746e88743]\nE       \t(No symbol) [0x0x7ff746e514c1]\nE       \t(No symbol) [0x0x7ff746e52253]\nE       \tGetHandleVerifier [0x0x7ff74731a2dd+3004797]\nE       \tGetHandleVerifier [0x0x7ff74731472d+2981325]\nE       \tGetHandleVerifier [0x0x7ff747333380+3107360]\nE       \tGetHandleVerifier [0x0x7ff74706aa2e+188622]\nE       \tGetHandleVerifier [0x0x7ff7470722bf+219487]\nE       \tGetHandleVerifier [0x0x7ff747058df4+115860]\nE       \tGetHandleVerifier [0x0x7ff747058fa9+116297]\nE       \tGetHandleVerifier [0x0x7ff74703f558+11256]\nE       \tBaseThreadInitThunk [0x0x7ffda8bf7374+20]\nE       \tRtlUserThreadStart [0x0x7ffdaa1fcc91+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "stdout", "source": "37ca4052-b818-472e-8a09-23ebd50d794f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "login", "value": "{'username': 'JH-01048', 'password': '123456', 'title': '车间/主任审批意见'}"}], "start": 1751942775527, "stop": 1751942775528, "uuid": "448d2bb5-b8ec-4874-8003-89c86326c12c", "historyId": "bf3a2a3122d871a7512976fc34640d2f", "testCaseId": "d0c416a3a838d84fbf3ac19912da48f5", "fullName": "test_招聘审批流程#test_approve_candidates", "labels": [{"name": "suite", "value": "test_招聘审批流程"}, {"name": "host", "value": "JH-KF10"}, {"name": "thread", "value": "21496-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_招聘审批流程"}]}
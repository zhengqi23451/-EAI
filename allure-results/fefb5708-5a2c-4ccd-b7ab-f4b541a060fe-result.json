{"name": "test_approve_candidates[login0]", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bb1b9ff8d8246c2f0332dfa1d564b9a6\")>\nrequest = <SubRequest 'login' for <Function test_approve_candidates[login0]>>\n\n    @pytest.fixture(scope=\"function\")\n    def login(browser, request):\n        username = request.param.get(\"username\")\n        password = request.param.get(\"password\")\n        browser.get(\"http://192.168.2.42:9529/\")\n        wait = WebDriverWait(browser, 20)\n        try:\n            # 验证码处理\n            captcha_img = wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//*[@id=\"app\"]/div[@class=\"login-container\"]/div[@class=\"con-in\"]/form/div[2]/div[@class=\"el-form-item is-required\"]/div[@class=\"el-form-item__content\"]/img[@class=\"cap_img\"]')))\n            captcha_data = captcha_img.get_attribute(\"src\").split(\",\")[1]\n            image_bytes = base64.b64decode(captcha_data)\n            img = cv2.cvtColor(np.array(Image.open(io.BytesIO(image_bytes))), cv2.COLOR_RGB2GRAY)\n            img = cv2.threshold(img, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)[1]\n            img = cv2.medianBlur(img, 3)\n            text = pytesseract.image_to_string(img, config=r'--psm 8 --oem 3').strip()\n            # 输入凭据\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id=\"app\"]/div[@class=\"login-container\"]/div[@class=\"con-in\"]/form/div[2]/div[1]/div[@class=\"el-form-item__content\"]/div[@class=\"el-input\"]/input'))).send_keys(username)\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id=\"app\"]/div[@class=\"login-container\"]/div[@class=\"con-in\"]/form/div[2]/div[2]/div[@class=\"el-form-item__content\"]/div[@class=\"el-input\"]/input'))).send_keys(password)\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id=\"app\"]/div[@class=\"login-container\"]/div[@class=\"con-in\"]/form/div[2]/div[3]/div[@class=\"el-form-item__content\"]/div[@class=\"el-input\"]/input'))).send_keys(text)\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//*[@id=\"app\"]/div/div/form/div[2]/button'))).click()\n    \n            # 验证登录\n            time.sleep(5)\n            try:\n                error = browser.find_element(By.CSS_SELECTOR, \".el-message__content\").text\n                if \"验证码错误\" in error:\n                    pytest.fail(\"验证码识别错误\")\n            except:\n                pass\n        except Exception as e:\n            # 截图并附加到 Allure 报告\n            allure.attach(browser.get_screenshot_as_png(), name=\"登录失败截图\",attachment_type=allure.attachment_type.PNG)\n>           raise e\n\ntest_审批流程.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bb1b9ff8d8246c2f0332dfa1d564b9a6\")>\nrequest = <SubRequest 'login' for <Function test_approve_candidates[login0]>>\n\n    @pytest.fixture(scope=\"function\")\n    def login(browser, request):\n        username = request.param.get(\"username\")\n        password = request.param.get(\"password\")\n        browser.get(\"http://192.168.2.42:9529/\")\n        wait = WebDriverWait(browser, 20)\n        try:\n            # 验证码处理\n            captcha_img = wait.until(EC.presence_of_element_located(\n                (By.XPATH, '//*[@id=\"app\"]/div[@class=\"login-container\"]/div[@class=\"con-in\"]/form/div[2]/div[@class=\"el-form-item is-required\"]/div[@class=\"el-form-item__content\"]/img[@class=\"cap_img\"]')))\n>           captcha_data = captcha_img.get_attribute(\"src\").split(\",\")[1]\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           IndexError: list index out of range\n\ntest_审批流程.py:39: IndexError"}, "parameters": [{"name": "login", "value": "{'username': 'admin1', 'password': 'password1'}"}], "start": 1751619349660, "stop": 1751619349660, "uuid": "91d80275-aab3-47c7-bd20-61d0bc73421e", "historyId": "409c35f88dc3621ceffedc43051ec7e3", "testCaseId": "fa7738f97c20fcff0c1f833201952ff0", "fullName": "test_审批流程#test_approve_candidates", "labels": [{"name": "suite", "value": "test_审批流程"}, {"name": "host", "value": "JH-KF10"}, {"name": "thread", "value": "1804-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_审批流程"}]}
{"uid":"66b43a7bcc3ba2f5","name":"test_delete[resolution0-chrome]","fullName":"系统设置.系统管理设置.网站配置管理.test_申请号码管理#test_delete","historyId":"1aced735f5d686101c48c483849c084c","time":{"start":1753513664474,"stop":1753513668088,"duration":3614},"description":"删除申请信息","descriptionHtml":"<p>删除申请信息</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#staleelementreferenceexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7e301fea5+79173]\n\tGetHandleVerifier [0x0x7ff7e301ff00+79264]\n\t(No symbol) [0x0x7ff7e2dd9e5a]\n\t(No symbol) [0x0x7ff7e2de184d]\n\t(No symbol) [0x0x7ff7e2de489c]\n\t(No symbol) [0x0x7ff7e2de496f]\n\t(No symbol) [0x0x7ff7e2e3847b]\n\t(No symbol) [0x0x7ff7e2e35f32]\n\t(No symbol) [0x0x7ff7e2e32f71]\n\t(No symbol) [0x0x7ff7e2e31e61]\n\t(No symbol) [0x0x7ff7e2e23464]\n\t(No symbol) [0x0x7ff7e2e5896a]\n\t(No symbol) [0x0x7ff7e2e22d16]\n\t(No symbol) [0x0x7ff7e2e58b80]\n\t(No symbol) [0x0x7ff7e2e8100d]\n\t(No symbol) [0x0x7ff7e2e58743]\n\t(No symbol) [0x0x7ff7e2e214c1]\n\t(No symbol) [0x0x7ff7e2e22253]\n\tGetHandleVerifier [0x0x7ff7e32ea2dd+3004797]\n\tGetHandleVerifier [0x0x7ff7e32e472d+2981325]\n\tGetHandleVerifier [0x0x7ff7e3303380+3107360]\n\tGetHandleVerifier [0x0x7ff7e303aa2e+188622]\n\tGetHandleVerifier [0x0x7ff7e30422bf+219487]\n\tGetHandleVerifier [0x0x7ff7e3028df4+115860]\n\tGetHandleVerifier [0x0x7ff7e3028fa9+116297]\n\tGetHandleVerifier [0x0x7ff7e300f558+11256]\n\tBaseThreadInitThunk [0x0x7ffab4797374+20]\n\tRtlUserThreadStart [0x0x7ffab63dcc91+33]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3e4541fd80208b40a654511457f71d40\")>\nnavigate_to_number_management = None\n\n    @pytest.mark.parametrize(\"driver\",['chrome'],indirect=True)\n    @allure.epic(\"系统管理设置\")\n    @allure.feature(\"网站配置管理\")\n    @allure.story(\"申请号码管理\")\n    @allure.description(\"删除申请信息\")\n    def test_delete(driver,navigate_to_number_management):\n        wait = WebDriverWait(driver, 20)\n        time.sleep(3)\n        try:\n            #点击重置按钮\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//div[contains(@class,\"app-container\")]/form/div[contains(@class,\"search-btns\")]/button[1]'))).click()\n            #查询框\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//section//form/div[@class=\"el-row\"]//div[label[@for=\"field_value\"]]//input'))).send_keys(\"test\")\n            wait.until(EC.element_to_be_clickable((By.XPATH,'//div[contains(@class,\"app-container\")]/form/div[contains(@class,\"search-btns\")]/button[2]'))).click()\n            #点击删除按钮\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//tbody/tr[1]/td[contains(@class,\"col--last\")]/div/div/button[contains(@class,\"font-danger\")]'))).click()\n            #点击确定按钮\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[@class=\"el-message-box\"]//div[@class=\"el-message-box__btns\"]//button[contains(@class,\"el-button--primary\")]'))).click()\n            time.sleep(1)\n    \n            text=wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//p[@class=\"el-message__content\"]')))\n            if text.text != \"删除成功！\":\n                highlight_element(driver, text)\n                allure.attach(driver.get_screenshot_as_png(), name=\"删除申请信息失败截图\",\n                              attachment_type=allure.attachment_type.PNG)\n                reset_element(driver, text)\n            assert text.text == \"删除成功！\"\n            #点击重置按钮\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//div[contains(@class,\"app-container\")]/form/div[contains(@class,\"search-btns\")]/button[1]'))).click()\n            wait.until(EC.element_to_be_clickable((By.XPATH,'//div[contains(@class,\"app-container\")]/form/div[contains(@class,\"search-btns\")]/button[2]'))).click()\n        except Exception as e:\n            print(\"删除失败\")\n>           raise e\n\nC:\\Users\\Administrator\\Desktop\\test\\系统设置\\系统管理设置\\网站配置管理\\test_申请号码管理.py:359: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Administrator\\Desktop\\test\\系统设置\\系统管理设置\\网站配置管理\\test_申请号码管理.py:340: in test_delete\n    (By.XPATH, '//tbody/tr[1]/td[contains(@class,\"col--last\")]/div/div/button[contains(@class,\"font-danger\")]'))).click()\n                                                                                                                  ^^^^^^^\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001FDC7ACF930>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...ff7e300f558+11256]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffab4797374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffab63dcc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#staleelementreferenceexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7e301fea5+79173]\nE       \tGetHandleVerifier [0x0x7ff7e301ff00+79264]\nE       \t(No symbol) [0x0x7ff7e2dd9e5a]\nE       \t(No symbol) [0x0x7ff7e2de184d]\nE       \t(No symbol) [0x0x7ff7e2de489c]\nE       \t(No symbol) [0x0x7ff7e2de496f]\nE       \t(No symbol) [0x0x7ff7e2e3847b]\nE       \t(No symbol) [0x0x7ff7e2e35f32]\nE       \t(No symbol) [0x0x7ff7e2e32f71]\nE       \t(No symbol) [0x0x7ff7e2e31e61]\nE       \t(No symbol) [0x0x7ff7e2e23464]\nE       \t(No symbol) [0x0x7ff7e2e5896a]\nE       \t(No symbol) [0x0x7ff7e2e22d16]\nE       \t(No symbol) [0x0x7ff7e2e58b80]\nE       \t(No symbol) [0x0x7ff7e2e8100d]\nE       \t(No symbol) [0x0x7ff7e2e58743]\nE       \t(No symbol) [0x0x7ff7e2e214c1]\nE       \t(No symbol) [0x0x7ff7e2e22253]\nE       \tGetHandleVerifier [0x0x7ff7e32ea2dd+3004797]\nE       \tGetHandleVerifier [0x0x7ff7e32e472d+2981325]\nE       \tGetHandleVerifier [0x0x7ff7e3303380+3107360]\nE       \tGetHandleVerifier [0x0x7ff7e303aa2e+188622]\nE       \tGetHandleVerifier [0x0x7ff7e30422bf+219487]\nE       \tGetHandleVerifier [0x0x7ff7e3028df4+115860]\nE       \tGetHandleVerifier [0x0x7ff7e3028fa9+116297]\nE       \tGetHandleVerifier [0x0x7ff7e300f558+11256]\nE       \tBaseThreadInitThunk [0x0x7ffab4797374+20]\nE       \tRtlUserThreadStart [0x0x7ffab63dcc91+33]\n\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1753513620109,"stop":1753513622527,"duration":2418},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"resolution","time":{"start":1753513620109,"stop":1753513620109,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"login","time":{"start":1753513622528,"stop":1753513630745,"duration":8217},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"navigate_to_number_management","time":{"start":1753513630745,"stop":1753513636413,"duration":5668},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"description":"删除申请信息","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#staleelementreferenceexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7e301fea5+79173]\n\tGetHandleVerifier [0x0x7ff7e301ff00+79264]\n\t(No symbol) [0x0x7ff7e2dd9e5a]\n\t(No symbol) [0x0x7ff7e2de184d]\n\t(No symbol) [0x0x7ff7e2de489c]\n\t(No symbol) [0x0x7ff7e2de496f]\n\t(No symbol) [0x0x7ff7e2e3847b]\n\t(No symbol) [0x0x7ff7e2e35f32]\n\t(No symbol) [0x0x7ff7e2e32f71]\n\t(No symbol) [0x0x7ff7e2e31e61]\n\t(No symbol) [0x0x7ff7e2e23464]\n\t(No symbol) [0x0x7ff7e2e5896a]\n\t(No symbol) [0x0x7ff7e2e22d16]\n\t(No symbol) [0x0x7ff7e2e58b80]\n\t(No symbol) [0x0x7ff7e2e8100d]\n\t(No symbol) [0x0x7ff7e2e58743]\n\t(No symbol) [0x0x7ff7e2e214c1]\n\t(No symbol) [0x0x7ff7e2e22253]\n\tGetHandleVerifier [0x0x7ff7e32ea2dd+3004797]\n\tGetHandleVerifier [0x0x7ff7e32e472d+2981325]\n\tGetHandleVerifier [0x0x7ff7e3303380+3107360]\n\tGetHandleVerifier [0x0x7ff7e303aa2e+188622]\n\tGetHandleVerifier [0x0x7ff7e30422bf+219487]\n\tGetHandleVerifier [0x0x7ff7e3028df4+115860]\n\tGetHandleVerifier [0x0x7ff7e3028fa9+116297]\n\tGetHandleVerifier [0x0x7ff7e300f558+11256]\n\tBaseThreadInitThunk [0x0x7ffab4797374+20]\n\tRtlUserThreadStart [0x0x7ffab63dcc91+33]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3e4541fd80208b40a654511457f71d40\")>\nnavigate_to_number_management = None\n\n    @pytest.mark.parametrize(\"driver\",['chrome'],indirect=True)\n    @allure.epic(\"系统管理设置\")\n    @allure.feature(\"网站配置管理\")\n    @allure.story(\"申请号码管理\")\n    @allure.description(\"删除申请信息\")\n    def test_delete(driver,navigate_to_number_management):\n        wait = WebDriverWait(driver, 20)\n        time.sleep(3)\n        try:\n            #点击重置按钮\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//div[contains(@class,\"app-container\")]/form/div[contains(@class,\"search-btns\")]/button[1]'))).click()\n            #查询框\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//section//form/div[@class=\"el-row\"]//div[label[@for=\"field_value\"]]//input'))).send_keys(\"test\")\n            wait.until(EC.element_to_be_clickable((By.XPATH,'//div[contains(@class,\"app-container\")]/form/div[contains(@class,\"search-btns\")]/button[2]'))).click()\n            #点击删除按钮\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//tbody/tr[1]/td[contains(@class,\"col--last\")]/div/div/button[contains(@class,\"font-danger\")]'))).click()\n            #点击确定按钮\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[@class=\"el-message-box\"]//div[@class=\"el-message-box__btns\"]//button[contains(@class,\"el-button--primary\")]'))).click()\n            time.sleep(1)\n    \n            text=wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//p[@class=\"el-message__content\"]')))\n            if text.text != \"删除成功！\":\n                highlight_element(driver, text)\n                allure.attach(driver.get_screenshot_as_png(), name=\"删除申请信息失败截图\",\n                              attachment_type=allure.attachment_type.PNG)\n                reset_element(driver, text)\n            assert text.text == \"删除成功！\"\n            #点击重置按钮\n            wait.until(EC.element_to_be_clickable((By.XPATH, '//div[contains(@class,\"app-container\")]/form/div[contains(@class,\"search-btns\")]/button[1]'))).click()\n            wait.until(EC.element_to_be_clickable((By.XPATH,'//div[contains(@class,\"app-container\")]/form/div[contains(@class,\"search-btns\")]/button[2]'))).click()\n        except Exception as e:\n            print(\"删除失败\")\n>           raise e\n\nC:\\Users\\Administrator\\Desktop\\test\\系统设置\\系统管理设置\\网站配置管理\\test_申请号码管理.py:359: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Administrator\\Desktop\\test\\系统设置\\系统管理设置\\网站配置管理\\test_申请号码管理.py:340: in test_delete\n    (By.XPATH, '//tbody/tr[1]/td[contains(@class,\"col--last\")]/div/div/button[contains(@class,\"font-danger\")]'))).click()\n                                                                                                                  ^^^^^^^\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001FDC7ACF930>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...ff7e300f558+11256]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffab4797374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffab63dcc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=137.0.7151.69); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#staleelementreferenceexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7e301fea5+79173]\nE       \tGetHandleVerifier [0x0x7ff7e301ff00+79264]\nE       \t(No symbol) [0x0x7ff7e2dd9e5a]\nE       \t(No symbol) [0x0x7ff7e2de184d]\nE       \t(No symbol) [0x0x7ff7e2de489c]\nE       \t(No symbol) [0x0x7ff7e2de496f]\nE       \t(No symbol) [0x0x7ff7e2e3847b]\nE       \t(No symbol) [0x0x7ff7e2e35f32]\nE       \t(No symbol) [0x0x7ff7e2e32f71]\nE       \t(No symbol) [0x0x7ff7e2e31e61]\nE       \t(No symbol) [0x0x7ff7e2e23464]\nE       \t(No symbol) [0x0x7ff7e2e5896a]\nE       \t(No symbol) [0x0x7ff7e2e22d16]\nE       \t(No symbol) [0x0x7ff7e2e58b80]\nE       \t(No symbol) [0x0x7ff7e2e8100d]\nE       \t(No symbol) [0x0x7ff7e2e58743]\nE       \t(No symbol) [0x0x7ff7e2e214c1]\nE       \t(No symbol) [0x0x7ff7e2e22253]\nE       \tGetHandleVerifier [0x0x7ff7e32ea2dd+3004797]\nE       \tGetHandleVerifier [0x0x7ff7e32e472d+2981325]\nE       \tGetHandleVerifier [0x0x7ff7e3303380+3107360]\nE       \tGetHandleVerifier [0x0x7ff7e303aa2e+188622]\nE       \tGetHandleVerifier [0x0x7ff7e30422bf+219487]\nE       \tGetHandleVerifier [0x0x7ff7e3028df4+115860]\nE       \tGetHandleVerifier [0x0x7ff7e3028fa9+116297]\nE       \tGetHandleVerifier [0x0x7ff7e300f558+11256]\nE       \tBaseThreadInitThunk [0x0x7ffab4797374+20]\nE       \tRtlUserThreadStart [0x0x7ffab63dcc91+33]\n\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: StaleElementReferenceException","steps":[],"attachments":[{"uid":"99220493d29e0ee2","name":"stdout","source":"99220493d29e0ee2.txt","type":"text/plain","size":13}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"driver::0","time":{"start":1753513693609,"stop":1753513696423,"duration":2814},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"epic","value":"系统管理设置"},{"name":"feature","value":"网站配置管理"},{"name":"story","value":"申请号码管理"},{"name":"parentSuite","value":"系统设置.系统管理设置.网站配置管理"},{"name":"suite","value":"test_申请号码管理"},{"name":"host","value":"JH-KF10"},{"name":"thread","value":"19900-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"系统设置.系统管理设置.网站配置管理.test_申请号码管理"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'chrome'"},{"name":"resolution","value":"(1920, 1080)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"66b43a7bcc3ba2f5.json","parameterValues":["'chrome'","(1920, 1080)"]}
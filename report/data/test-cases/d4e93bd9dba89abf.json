{"uid":"d4e93bd9dba89abf","name":"test_minimal[360se-resolution0]","fullName":"test_新增简历#test_minimal","historyId":"913a23f848326db4fdba1b219817c018","time":{"start":1753511062138,"stop":1753511062138,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: <unknown>: Failed to read the 'localStorage' property from 'Window': Storage is disabled inside 'data:' URLs.\n  (Session info: chrome=108.0.5359.125)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x00EEF243]\n\t(No symbol) [0x00E77FD1]\n\t(No symbol) [0x00D6D04D]\n\t(No symbol) [0x00D6FD34]\n\t(No symbol) [0x00D6FBE5]\n\t(No symbol) [0x00D70565]\n\t(No symbol) [0x00DCD47C]\n\t(No symbol) [0x00DB858C]\n\t(No symbol) [0x00DCC9EB]\n\t(No symbol) [0x00DB8386]\n\t(No symbol) [0x00D9163C]\n\t(No symbol) [0x00D9269D]\n\tGetHandleVerifier [0x01189A22+2655074]\n\tGetHandleVerifier [0x0117CA24+2601828]\n\tGetHandleVerifier [0x00F98C0A+619850]\n\tGetHandleVerifier [0x00F97830+614768]\n\t(No symbol) [0x00E805FC]\n\t(No symbol) [0x00E85968]\n\t(No symbol) [0x00E85A55]\n\t(No symbol) [0x00E9051B]\n\tBaseThreadInitThunk [0x76EFFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77D582AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77D5827E+238]","statusTrace":"self = <allure_commons._allure.fixture object at 0x0000028BB4AA0E60>, args = (), kwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nD:\\t\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py:221: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nconftest.py:9: in cleanup\n    driver.execute_script(\"window.localStorage.clear();\")\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:551: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000028BB4AB5E00>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"\\\\u003Cunknown>\",\"message\":\"\\\\u003Cunknown>: Failed to read the \\'localSt...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D582AE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D5827E+238]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: <unknown>: Failed to read the 'localStorage' property from 'Window': Storage is disabled inside 'data:' URLs.\nE         (Session info: chrome=108.0.5359.125)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x00EEF243]\nE       \t(No symbol) [0x00E77FD1]\nE       \t(No symbol) [0x00D6D04D]\nE       \t(No symbol) [0x00D6FD34]\nE       \t(No symbol) [0x00D6FBE5]\nE       \t(No symbol) [0x00D70565]\nE       \t(No symbol) [0x00DCD47C]\nE       \t(No symbol) [0x00DB858C]\nE       \t(No symbol) [0x00DCC9EB]\nE       \t(No symbol) [0x00DB8386]\nE       \t(No symbol) [0x00D9163C]\nE       \t(No symbol) [0x00D9269D]\nE       \tGetHandleVerifier [0x01189A22+2655074]\nE       \tGetHandleVerifier [0x0117CA24+2601828]\nE       \tGetHandleVerifier [0x00F98C0A+619850]\nE       \tGetHandleVerifier [0x00F97830+614768]\nE       \t(No symbol) [0x00E805FC]\nE       \t(No symbol) [0x00E85968]\nE       \t(No symbol) [0x00E85A55]\nE       \t(No symbol) [0x00E9051B]\nE       \tBaseThreadInitThunk [0x76EFFCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D582AE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D5827E+238]\n\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"resolution","time":{"start":1753511000099,"stop":1753511000099,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"driver","time":{"start":1753511058797,"stop":1753511062136,"duration":3339},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"cleanup","time":{"start":1753511062136,"stop":1753511062136,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[{"name":"cleanup::0","time":{"start":1753511062140,"stop":1753511062187,"duration":47},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: <unknown>: Failed to read the 'localStorage' property from 'Window': Storage is disabled inside 'data:' URLs.\n  (Session info: chrome=108.0.5359.125)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x00EEF243]\n\t(No symbol) [0x00E77FD1]\n\t(No symbol) [0x00D6D04D]\n\t(No symbol) [0x00D6FD34]\n\t(No symbol) [0x00D6FBE5]\n\t(No symbol) [0x00D70565]\n\t(No symbol) [0x00DCD47C]\n\t(No symbol) [0x00DB858C]\n\t(No symbol) [0x00DCC9EB]\n\t(No symbol) [0x00DB8386]\n\t(No symbol) [0x00D9163C]\n\t(No symbol) [0x00D9269D]\n\tGetHandleVerifier [0x01189A22+2655074]\n\tGetHandleVerifier [0x0117CA24+2601828]\n\tGetHandleVerifier [0x00F98C0A+619850]\n\tGetHandleVerifier [0x00F97830+614768]\n\t(No symbol) [0x00E805FC]\n\t(No symbol) [0x00E85968]\n\t(No symbol) [0x00E85A55]\n\t(No symbol) [0x00E9051B]\n\tBaseThreadInitThunk [0x76EFFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77D582AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77D5827E+238]\n\n","statusTrace":"  File \"D:\\t\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"D:\\t\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 938, in _teardown_yield_fixture\n    next(it)\n    ~~~~^^^^\n  File \"D:\\test\\conftest.py\", line 9, in cleanup\n    driver.execute_script(\"window.localStorage.clear();\")\n    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 551, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 454, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"D:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"driver::0","time":{"start":1753511062314,"stop":1753511064821,"duration":2507},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"suite","value":"test_新增简历"},{"name":"host","value":"JH-KF10"},{"name":"thread","value":"18584-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_新增简历"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'360se'"},{"name":"resolution","value":"(1920, 1080)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"d4e93bd9dba89abf.json","parameterValues":["'360se'","(1920, 1080)"]}
{"uid":"6d7c05a30b7469f","name":"test_delete[resolution1-chrome]","fullName":"系统设置.系统管理设置.选项表单管理.test_ERP分类集合#test_delete","historyId":"6637296eca54bda67ee4c4e1682eb7cc","time":{"start":1753514331718,"stop":1753514354980,"duration":23262},"description":"删除分类","descriptionHtml":"<p>删除分类</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9fe292d7a5c1229ed0eaa2cd033b6a23\")>\nnavigate_to_ERP_Classification = None\n\n    @pytest.mark.parametrize(\"driver\",['chrome'],indirect=True)\n    @allure.epic(\"系统管理设置\")\n    @allure.feature(\"选项表单管理\")\n    @allure.story(\"ERP分类集合\")\n    @allure.description(\"删除分类\")\n    def test_delete(driver,navigate_to_ERP_Classification):\n        wait = WebDriverWait(driver, 20)\n        time.sleep(3)\n        try:\n            #计算类别\n            nodes = wait.until(EC.presence_of_all_elements_located((By.XPATH, \"(//div[@class='vxe-tree--node-wrapper node--level-1'])[last()]//div[@class='vxe-tree--node-wrapper node--level-2']\")))\n            ago = len(nodes)\n    \n            #点击删除按钮\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//section//div[@class=\"el-card__header\"]//button[span[text()=\"删除\"]]'))).click()\n            #点击确定按钮\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[@class=\"el-message-box\"]//div[@class=\"el-message-box__btns\"]//button[contains(@class,\"el-button--primary\")]'))).click()\n            time.sleep(1)\n            #计算现在有多少类别\n            try:\n                nodes=WebDriverWait(driver, 5).until(EC.presence_of_all_elements_located((By.XPATH,\"(//div[@class='vxe-tree--node-wrapper node--level-1'])[last()]//div[@class='vxe-tree--node-wrapper node--level-2']\")))\n                now=len(nodes)\n            except TimeoutException:\n                now=0\n    \n            if (ago-now)!=1:\n                highlight_element(driver, nodes)\n                allure.attach(driver.get_screenshot_as_png(), name=\"删除分类失败截图\",\n                              attachment_type=allure.attachment_type.PNG)\n                reset_element(driver, nodes)\n            assert (ago-now)==1\n        except Exception as e:\n            print(\"删除失败\")\n>           raise e\n\nC:\\Users\\Administrator\\Desktop\\test\\系统设置\\系统管理设置\\选项表单管理\\test_ERP分类集合.py:1144: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Administrator\\Desktop\\test\\系统设置\\系统管理设置\\选项表单管理\\test_ERP分类集合.py:1119: in test_delete\n    nodes = wait.until(EC.presence_of_all_elements_located((By.XPATH, \"(//div[@class='vxe-tree--node-wrapper node--level-1'])[last()]//div[@class='vxe-tree--node-wrapper node--level-2']\")))\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9fe292d7a5c1229ed0eaa2cd033b6a23\")>\nmethod = <function presence_of_all_elements_located.<locals>._predicate at 0x000001FDC7A5C680>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1753514194770,"stop":1753514197177,"duration":2407},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"resolution","time":{"start":1753514194770,"stop":1753514194770,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"login","time":{"start":1753514197177,"stop":1753514205456,"duration":8279},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"navigate_to_ERP_Classification","time":{"start":1753514205457,"stop":1753514209405,"duration":3948},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"description":"删除分类","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9fe292d7a5c1229ed0eaa2cd033b6a23\")>\nnavigate_to_ERP_Classification = None\n\n    @pytest.mark.parametrize(\"driver\",['chrome'],indirect=True)\n    @allure.epic(\"系统管理设置\")\n    @allure.feature(\"选项表单管理\")\n    @allure.story(\"ERP分类集合\")\n    @allure.description(\"删除分类\")\n    def test_delete(driver,navigate_to_ERP_Classification):\n        wait = WebDriverWait(driver, 20)\n        time.sleep(3)\n        try:\n            #计算类别\n            nodes = wait.until(EC.presence_of_all_elements_located((By.XPATH, \"(//div[@class='vxe-tree--node-wrapper node--level-1'])[last()]//div[@class='vxe-tree--node-wrapper node--level-2']\")))\n            ago = len(nodes)\n    \n            #点击删除按钮\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//section//div[@class=\"el-card__header\"]//button[span[text()=\"删除\"]]'))).click()\n            #点击确定按钮\n            wait.until(EC.element_to_be_clickable(\n                (By.XPATH, '//div[@class=\"el-message-box\"]//div[@class=\"el-message-box__btns\"]//button[contains(@class,\"el-button--primary\")]'))).click()\n            time.sleep(1)\n            #计算现在有多少类别\n            try:\n                nodes=WebDriverWait(driver, 5).until(EC.presence_of_all_elements_located((By.XPATH,\"(//div[@class='vxe-tree--node-wrapper node--level-1'])[last()]//div[@class='vxe-tree--node-wrapper node--level-2']\")))\n                now=len(nodes)\n            except TimeoutException:\n                now=0\n    \n            if (ago-now)!=1:\n                highlight_element(driver, nodes)\n                allure.attach(driver.get_screenshot_as_png(), name=\"删除分类失败截图\",\n                              attachment_type=allure.attachment_type.PNG)\n                reset_element(driver, nodes)\n            assert (ago-now)==1\n        except Exception as e:\n            print(\"删除失败\")\n>           raise e\n\nC:\\Users\\Administrator\\Desktop\\test\\系统设置\\系统管理设置\\选项表单管理\\test_ERP分类集合.py:1144: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Administrator\\Desktop\\test\\系统设置\\系统管理设置\\选项表单管理\\test_ERP分类集合.py:1119: in test_delete\n    nodes = wait.until(EC.presence_of_all_elements_located((By.XPATH, \"(//div[@class='vxe-tree--node-wrapper node--level-1'])[last()]//div[@class='vxe-tree--node-wrapper node--level-2']\")))\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9fe292d7a5c1229ed0eaa2cd033b6a23\")>\nmethod = <function presence_of_all_elements_located.<locals>._predicate at 0x000001FDC7A5C680>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\t\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException","steps":[],"attachments":[{"uid":"e601c7609084f1b2","name":"stdout","source":"e601c7609084f1b2.txt","type":"text/plain","size":13}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"driver::0","time":{"start":1753514355077,"stop":1753514359274,"duration":4197},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"feature","value":"选项表单管理"},{"name":"story","value":"ERP分类集合"},{"name":"epic","value":"系统管理设置"},{"name":"parentSuite","value":"系统设置.系统管理设置.选项表单管理"},{"name":"suite","value":"test_ERP分类集合"},{"name":"host","value":"JH-KF10"},{"name":"thread","value":"19900-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"系统设置.系统管理设置.选项表单管理.test_ERP分类集合"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'chrome'"},{"name":"resolution","value":"(1366, 768)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"6d7c05a30b7469f.json","parameterValues":["'chrome'","(1366, 768)"]}